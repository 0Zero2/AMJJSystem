<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HomeBTN.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>